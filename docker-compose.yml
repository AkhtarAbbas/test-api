version: '3'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - PORT=3000
      - DB_HOST=0.0.0.0
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PW=postgres      
    ports:
      - 3000:3000
    depends_on:
      - postgres
    links:
      - postgres:postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev

  postgres:
    image: postgres:alpine
    restart: always
    environment:
      - DB_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mypets
    ports:
      - "5432:5432"




# version: '3'

# services:
#   api:
#     build:
#       context: .
#       dockerfile: Dockerfile
#       # args:
#       #   - NODE_ENV=development
#     environment:
#       # - PORT=3000
#       # - DB_HOST=127.0.0.1
#       # - DB_PORT=5432
#       # - DB_USER=postgres
#       # - DB_PW=postgres  
#         - PORT=3000
#         - POSTGRES_HOST=127.0.0.1
#         - POSTGRES_PORT=5432
#         - POSTGRES_USER=postgres
#         - POSTGRES_PASSWORD=postgres
#         - POSTGRES_DB=mypets
#     ports:
#       - "3000:3000"
#     depends_on:
#       - postgres
#     links:
#       - postgres:postgres
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     command: npm run start
#   postgres:
#     image: postgres
#     restart: always
#     environment:
#       - DB_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=mypets
#     ports:
#       - "5432:5432"
    


  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #       - 8080:8080

# version: '3.9'

# services:
#   app_server:
#     container_name: app_server
#     image: app_server:1.0.0
#     build:
#       context: .
#       target: production
#       dockerfile: ./Dockerfile
#     command: npm run start:prod
#     env_file: .env
#     ports:
#       - '3000:3000'
#     networks:
#       - app-network
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     restart: unless-stopped
#     depends_on:
#       - database
#   database:
#     container_name: app_postgres_dev
#     image: postgres:12
#     env_file: .env
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     networks:
#       - app-network
#     ports:
#       - '5432:5432'
#     healthcheck:
#       test: pg_isready
#       interval: 10s
#       timeout: 5s
#       retries: 5

# networks:
#   app-network:

# volumes:
#   postgres-data:
